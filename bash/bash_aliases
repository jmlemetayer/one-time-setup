# ~/.bash_aliases

# Basic aliases
alias ll='ls -l'
alias l='ll'
alias la='ll -A'
alias mkdir='mkdir -p'
alias gl="git log --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"
alias ssh='ssh -X'

# Misunderstood aliases
alias cd..='cd ..'
alias mroe='more'
alias pdw='pwd'
alias tre='tree'

# Functions
## Add sudo to apt-get
function apt-get() { [ $UID -ne 0 ] && sudo apt-get $@ || command apt-get $@; }

## Don't care about format, just extract
extract () {
	if [ -f $1 ]
	then
		case $1 in
			*.tar.bz2)	tar xjf $1 ;;
			*.tar.xz)        tar xJf $1 ;;
			*.tar.gz)	tar xzf $1 ;;
			*.bz2)		bunzip2 $1 ;;
			*.rar)		unrar e $1 ;;
			*.gz)		gunzip $1 ;;
			*.tar)		tar xf $1 ;;
			*.tbz2)		tar xjf $1 ;;
			*.tgz)		tar xzf $1 ;;
			*.zip)		unzip $1 ;;
			*.Z)		uncompress $1 ;;
			*.7z)		7z x $1 ;;
			*)			echo "'$1' cannot be extracted via extract()" ;;
		esac
	else
		echo "'$1' is not a valid file"
	fi
}

#Â Upgrade Ubuntu
upgrade-ubuntu()
{
	local RET

	sudo apt-get update

	RET=$?

	if [ $RET != 0 ]
	then
		echo Failed to update 1>&2
		return $RET
	fi

	local UPDATE_STR=$(/usr/lib/update-notifier/apt-check --human-readable)
	local UPDATE_NUM

	for NUM in $(echo "$UPDATE_STR" | awk '{print $1}')
	do
		UPDATE_NUM="${UPDATE_NUM}${NUM}"
	done

	if [ $UPDATE_NUM -eq 0 ]
	then
		echo Nothing to update
		return 0
	fi

	printf "%s\n" "$UPDATE_STR"

	sudo apt-get -y upgrade && \
	sudo apt-get -y dist-upgrade && \
	sudo apt-get -y autoremove && \
	sudo apt-get -y autoclean

	RET=$?

	if [ $RET != 0 ]
	then
		echo Failed to upgrade 1>&2
		return $RET
	fi

	if [ -f /var/run/reboot-required ]
	then
		echo Reboot needed
		sudo reboot
	fi

	echo Done !
	return 0
}

# Home made tree if the command is not available
tree()
{
	[ -z "$(which tree)" ] && _tree $@ || command tree $@
}

_tree()
{
	local DIR=${1:-.} && DIR=${DIR%/} && shift
	[ -z "$1" ] && command ls --color=auto -d $DIR || \
		(cd $(dirname $DIR) && command ls --color=auto -d $(basename $DIR))
	local FILES=($(command ls $DIR)) DEPTH=( "$@" ) && DEPTH=("${DEPTH[@]}" "|")
	for FILE in ${FILES[@]}
	do
		[ $FILE = ${FILES[$((${#FILES[@]} - 1))]} ] && \
			echo -en "${DEPTH[@]} \b\b+- " && DEPTH[$((${#DEPTH[@]} - 1))]=" " || \
			echo -en "${DEPTH[@]} \b\b|- "
		[ -d ${DIR}/${FILE} ] && \
			_tree ${DIR}/${FILE} "${DEPTH[@]}" || \
			(cd $DIR && command ls --color=auto $FILE)
	done
}
