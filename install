---
# This is the Jekyll Front Matter: https://jekyllrb.com/docs/frontmatter
#
# This file will be parsed and generated by GitHub Pages (which is using Jekyll)
# to replace the "{{ ... }}" variables by the actual values corresponding to the$
# current repository.
#
# So this repository can be safely forked because every URLs are dynamically
# generated.
#
---
# This script does not have a shebang interpreter line because it is intended to
# be explicitly piped like this:
#
#     wget -qO- {{ site.github.url }}/install | sudo sh

# Enable the "exit on error" option.
set -e

# Create a temporary directory.
tmp="$(mktemp --directory)"

# Remove the temporary directory when leaving.
trap "rm --recursive ${tmp}" EXIT

# Helper to check if a package is installed.
installed() { dpkg --status $@ >/dev/null 2>&1; }

# Get the system state.
[ -n "${SUDO_USER}" ]	&& user="${SUDO_USER}"	|| user="$(id --name --user)"
[ -n "${SUDO_UID}" ]	&& uid="${SUDO_UID}"	|| uid="$(id --user)"
[ -n "${SUDO_GID}" ]	&& gid="${SUDO_GID}"	|| gid="$(id --group)"

home="$(awk 'BEGIN { FS=":" } /'${user}'/ {print $6}' /etc/passwd)"

[ "$(id --user)" = 0 ] && root=y || root=n

installed task-desktop && desktop=y || desktop=n

if [ "${root}" = y ]
then
	# Sanitize environment.
	LC_ALL=C
	LANG=C

	# Reconfigure locales.
	echo "en_GB.UTF-8 UTF-8" > /etc/locale.gen
	echo "fr_FR.UTF-8 UTF-8" >> /etc/locale.gen
	locale-gen
	update-locale LANG="en_GB.UTF-8"

	# Clean apt source file and activate contrib and non-free.
	sed --in-place \
		--expression '/^#/d' \
		--expression '/^\s*$/d' \
		--expression 's/^\(.*main\)/\1 contrib non-free/' \
		/etc/apt/sources.list

	# Install needed package.
	apt update

	common="bash-completion
		curl
		file
		less
		lsb-release
		lsof
		man-db
		manpages
		net-tools
		tree"

	archive="bzip2
		p7zip-full
		p7zip-rar
		rar
		unrar
		unzip
		xz-utils
		zip"

	development="astyle
		autoconf
		automake
		build-essential
		cmake
		gdb
		git
		libncurses5-dev
		libtool
		minicom
		pkg-config
		python
		repo
		valgrind
		vim"

	apt install --assume-yes ${common} ${archive} ${development}
fi

# Helper to run a command as the user.
runasuser() {
	if [ "${root}" = y ]
	then
		local command=${1}
		shift
		su ${user} --shell $(which ${command}) -- ${@}
	else
		${@}
	fi
}

# Download and extract the GitHub resources in the temporary directory.
wget	--output-document "${tmp}/github.tar.gz" \
	--quiet "{{ site.github.tar_url }}"

tar	--directory ${tmp} \
	--transform "s:^[^/]*:.:" \
	--extract --gzip --file "${tmp}/github.tar.gz"

# Install them for the current user.
runasuser install --mode 640 \
	--target-directory "${home}" \
	"${tmp}/.bashrc" \
	"${tmp}/.bash_logout" \
	"${tmp}/.dircolors" \
	"${tmp}/.profile"

if installed git
then
	runasuser install --mode 640 \
		--target-directory "${home}" \
		"${tmp}/.gitconfig"
fi

if installed astyle
then
	runasuser install --mode 640 \
		--target-directory "${home}" \
		"${tmp}/.astylerc"
fi

# Finally, print a success message.
echo "Successfully installed everything"
